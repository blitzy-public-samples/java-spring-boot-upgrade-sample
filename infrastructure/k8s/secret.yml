# Human Tasks:
# 1. Generate secure base64-encoded values for all secrets before deployment
# 2. Ensure proper RBAC permissions are configured for accessing secrets
# 3. Consider using a secrets management solution like HashiCorp Vault for production
# 4. Rotate secrets periodically according to security policies
# 5. Verify that the namespace matches your deployment environment

# Requirement: Application Configuration, Spring Boot 3 Migration
# Defines sensitive configuration data for Spring Boot 3 application
apiVersion: v1
kind: Secret
metadata:
  name: spring-boot-secrets
  namespace: default
  labels:
    app: spring-boot-app
    environment: production

# Requirement: Application Configuration
# Stores base64-encoded sensitive configuration data
# Note: Values below are placeholders and must be replaced with actual base64-encoded secrets
type: Opaque
data:
  # Database credentials for Spring Boot datasource
  # Must be base64 encoded using: echo -n "value" | base64
  SPRING_DATASOURCE_USERNAME: cGxhY2Vob2xkZXI=  # placeholder
  SPRING_DATASOURCE_PASSWORD: cGxhY2Vob2xkZXI=  # placeholder

  # Spring Security user authentication
  SPRING_SECURITY_USER_PASSWORD: cGxhY2Vob2xkZXI=  # placeholder

  # JWT token signing key (minimum 32 characters)
  # Generate using: openssl rand -base64 32
  JWT_SECRET_KEY: cGxhY2Vob2xkZXI=  # placeholder