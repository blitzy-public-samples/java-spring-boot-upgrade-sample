# Database Configuration
# Requirement: Database Configuration - Configure database connection credentials and settings
POSTGRES_DB=springboot
DB_USER=postgres
DB_PASSWORD=changeme
SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/springboot

# Application Configuration
# Requirement: Environment Configuration - Define environment variables for Spring Boot application
SPRING_PROFILES_ACTIVE=dev
SERVER_PORT=8080

# Management & Monitoring Configuration
# Requirement: Management Configuration - Configure management and monitoring settings
MANAGEMENT_SERVER_PORT=8080
MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=*

# Additional Optional Settings
# Server Configuration
SERVER_ERROR_INCLUDE_STACKTRACE=NEVER
SERVER_ERROR_INCLUDE_MESSAGE=ALWAYS
SERVER_TOMCAT_ACCESSLOG_ENABLED=true

# Actuator Settings
MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS=ALWAYS
MANAGEMENT_ENDPOINT_HEALTH_PROBES_ENABLED=true

# Logging Configuration
LOGGING_LEVEL_ROOT=INFO
LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB=INFO
LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_ACTUATOR=INFO

# JPA Configuration
SPRING_JPA_SHOW_SQL=false
SPRING_JPA_HIBERNATE_DDL_AUTO=none
SPRING_JPA_OPEN_IN_VIEW=false

# Character Encoding
SERVER_SERVLET_ENCODING_CHARSET=UTF-8
SERVER_SERVLET_ENCODING_ENABLED=true
SERVER_SERVLET_ENCODING_FORCE=true

# Human Tasks:
# 1. Review and adjust DB_PASSWORD to meet your security requirements (minimum 8 characters)
# 2. Verify SPRING_DATASOURCE_URL matches your PostgreSQL container hostname
# 3. Adjust SERVER_PORT and MANAGEMENT_SERVER_PORT if ports are already in use
# 4. Consider restricting MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE in production
# 5. Review logging levels before deploying to production