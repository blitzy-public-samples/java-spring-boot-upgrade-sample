# GitHub Actions workflow for SonarCloud analysis of Spring Boot 3.x application
# Addresses requirement: Spring Boot 3 Migration - Ensures code quality and security standards 
# through automated SonarQube analysis with Java 17 compatibility checks

name: SonarCloud Analysis

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

permissions:
  contents: read
  pull-requests: write

env:
  SONAR_PROJECT_KEY: spring-boot-actuator-sample
  SONAR_ORGANIZATION: sample-org

jobs:
  sonar:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    
    steps:
      # Checkout repository code
      # actions/checkout@v3
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better relevancy of analysis
      
      # Setup Java 17 environment
      # actions/setup-java@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'  # Matches java.version from pom.xml
          distribution: 'temurin'
          cache: 'maven'
      
      # Cache Maven packages
      # actions/cache@v4
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      
      # Build and analyze with Maven and SonarCloud
      - name: Build and Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.projectKey=${SONAR_PROJECT_KEY} \
          -Dsonar.organization=${SONAR_ORGANIZATION} \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.java.source=17 \
          -Dsonar.sourceEncoding=UTF-8 \
          -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml \
          -Dsonar.junit.reportPaths=target/surefire-reports,target/failsafe-reports \
          -Dsonar.tests=src/test/java \
          -Dsonar.test.inclusions=**/*Test.java,**/*IT.java \
          -Dsonar.java.binaries=target/classes \
          -Dsonar.java.test.binaries=target/test-classes
      
      # Upload analysis results to SonarCloud
      # SonarSource/sonarcloud-github-action@master
      - name: SonarCloud Quality Gate Check
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: src/backend