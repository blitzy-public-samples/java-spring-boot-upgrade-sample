# GitHub Actions workflow for building, testing and packaging Spring Boot 3.x application
# Addresses requirement: Spring Boot 3 Migration - Handles building and testing of the Spring Boot 3 application with Java 17

name: Build and Test

# Trigger workflow on push and pull requests to main branch
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Define required permissions
permissions:
  contents: read
  packages: write

# Environment variables used across jobs
env:
  JAVA_VERSION: '17'
  MAVEN_OPTS: '-Dmaven.repo.local=.m2/repository'
  MAVEN_CLI_OPTS: '-B -e'
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: Build and Package
    runs-on: ubuntu-latest
    
    steps:
      # Checkout repository code
      # actions/checkout@v3
      - name: Checkout Repository
        uses: actions/checkout@v3
        
      # Setup JDK 17 environment
      # actions/setup-java@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'maven'
          
      # Cache Maven dependencies to speed up builds
      # actions/cache@v4
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
          
      # Build application with Maven
      - name: Build with Maven
        working-directory: src/backend
        run: |
          mvn ${{ env.MAVEN_CLI_OPTS }} clean compile
          
      # Run unit tests
      - name: Run Unit Tests
        working-directory: src/backend
        run: mvn ${{ env.MAVEN_CLI_OPTS }} test
        
      # Run integration tests
      - name: Run Integration Tests
        working-directory: src/backend
        run: mvn ${{ env.MAVEN_CLI_OPTS }} verify -DskipUnitTests
        
      # Package application
      - name: Package Application
        working-directory: src/backend
        run: mvn ${{ env.MAVEN_CLI_OPTS }} package -DskipTests
        
      # Setup Docker Buildx
      # docker/setup-buildx-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      # Login to GitHub Container Registry
      # docker/login-action@v2
      - name: Login to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      # Build and push Docker image
      # Addresses requirement: Application Containerization - Builds and publishes Docker container images
      # docker/build-push-action@v3
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v3
        with:
          context: src/backend
          file: src/backend/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-to: type=inline
          
      # Upload build artifacts
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: application-jar
          path: src/backend/target/*.jar
          retention-days: 5